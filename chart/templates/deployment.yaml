apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-app"
  labels:
    app: "{{ .Release.Name }}-app"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-app"
    spec:
      {{- if .Values.scheduling.affinity }}
      {{- if .Values.scheduling.affinity.node }}
      {{- if .Values.scheduling.affinity.node.labels }}
      affinity:
        nodeAffinity:
          {{ .Values.scheduling.affinity.node.type }}:
            nodeSelectorTerms:
            - matchExpressions:
                {{- range .Values.scheduling.affinity.node.labels }}
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
                {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.imagePullSecret }}"
      {{- end }}
      containers:
      - name: "{{ .Release.Name }}"
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
        # all custom environment variables
        {{- range .Values.app.envVars }}
        - name: {{ .key }}
          value: {{ .value | quote }}
        {{- end }}

        # MongoDB configuration
        {{- if .Values.mongo.deploymentName }}
          # main replica set config
        - name: MONGO_URL
          value: "mongodb://{{ .Values.mongo.deploymentName }}-mongodb-replicaset-0.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }},{{ .Values.mongo.deploymentName }}-mongodb-replicaset-1.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }},{{ .Values.mongo.deploymentName }}-mongodb-replicaset-2.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }}/{{ .Values.mongo.dbName }}?replicaSet={{ .Values.mongo.replicaSet }}"
          # oplog config
        - name: MONGO_OPLOG_URL
          value: "mongodb://{{ .Values.mongo.deploymentName }}-mongodb-replicaset-0.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }},{{ .Values.mongo.deploymentName }}-mongodb-replicaset-1.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }},{{ .Values.mongo.deploymentName }}-mongodb-replicaset-2.{{ .Values.mongo.deploymentName }}-mongodb-replicaset:{{ .Values.mongo.port }}/local?replicaSet={{ .Values.mongo.replicaSet }}"
        {{- end }}

        # {{- if index .Values "mongodb-replicaset" "enabled" }}
        #   # main replica set config
        # - name: MONGO_URL
        #   value: "mongodb://{{ .Release.Name }}-mongodb-replicaset-0.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }},{{ .Release.Name }}-mongodb-replicaset-1.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }},{{ .Release.Name }}-mongodb-replicaset-2.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }}/reaction?replicaSet={{ index .Values "mongodb-replicaset" "replicaSet" }}"
        #   # oplog config
        # - name: MONGO_OPLOG_URL
        #   value: "mongodb://{{ .Release.Name }}-mongodb-replicaset-0.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }},{{ .Release.Name }}-mongodb-replicaset-1.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }},{{ .Release.Name }}-mongodb-replicaset-2.{{ .Release.Name }}-mongodb-replicaset:{{ index .Values "mongodb-replicaset" "port" }}/local?replicaSet={{ index .Values "mongodb-replicaset" "replicaSet" }}"
        # {{- end }}

        ports:
        - name: api
          containerPort: {{ .Values.service.apiPort }}

        # resource requests/limits
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}

        # health checks
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.apiPort }}
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 15
          successThreshold: 2
          failureThreshold: 2

        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.apiPort }}
          initialDelaySeconds: 90
          timeoutSeconds: 2
          periodSeconds: 15
          failureThreshold: 2

      {{- if .Values.scheduling.tolerations }}
      tolerations:
      {{- range .Values.scheduling.tolerations }}
      - key: {{ .key }}
        value: {{ .value }}
        operator: Equal
        effect: {{ .effect }}
      {{- end }}
      {{- end }}
